#!/bin/sh
# the next line restarts using dash's interpreter (dashsh) \
exec dashsh "$0" ${1+"$@"}

package require fileutil
package require json_tools

set scriptDir [file normalize \
  [file dirname [info script]]
]

set luaScriptsJS [file normalize \
  [file join \
    [file dirname $scriptDir] \
    src extras scripts.js \
  ]
]

set babelNode [file join \
  [file dirname $scriptDir] node_modules .bin babel-node
]

if {![file exists $babelNode]} {
  throw NO_BABEL "Could not find Babel in node_modules"
}

set descriptors [exec -ignorestderr -- \
  $babelNode [file join $scriptDir get-lua-scripts.js]
]

if {![json isjson $descriptors]} {
  throw INVALID_RESPONSE "Received Descriptors is not Valid: $descriptors"
}

set jsObj "\["

json foreach s $descriptors {
  append jsObj "
  \{
    descriptor: {
      file: '[json get $s descriptor file]',
      name: '[json get $s descriptor name]',
      ext: '[json get $s descriptor ext]',
    },
    data: '[string map {"\n" "\\n"} [json get $s data]]',"
  if {[json exists $s params]} {
    append jsObj "
    params: (new Map([json extract $s params]): Map<string, Array<string> | string>)"
  }
  append jsObj "
  \},
"
}

append jsObj "\]"

::fileutil::writeFile $luaScriptsJS [string trimleft "
/* @flow */
// Auto-Generated by build-lua script in utils folder
// These are pre-compiled lua script descriptors which can be loaded
// into
import type Redis from 'ioredis';
import type { File\$SimpleData } from 'ioredis-utils/lib/types';
import { lua } from 'ioredis-utils';

const descriptors: Array<File\$SimpleData> = ${jsObj};

function addDefaultScriptsToRedis(redis: Redis) {
  return lua.addScriptsToRedis(redis, descriptors);
}

export default addDefaultScriptsToRedis;
"]
